## server post config
server:
  port: 8255
  ssl:
    key-store:
    key-store-type: PKCS12
    key-store-password:

## spring config
spring:
  application:
    name: Bud-Student
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url:
    username:
    password:
    type: com.alibaba.druid.pool.DruidDataSource
  data:
    redis:
      host:
      port:
      password:
      timeout: 30000
  rabbitmq:
    host:
    port:
    username:
    password:
    virtual-host:
    listener:
      simple:
        prefetch: 1

############## knife4j 接口文档配置 ##############
springdoc:
  swagger-ui:
    #指定Swagger UI的自定义前端请求路径
    path: /swagger
    operations-sorter: alpha
  api-docs:
    #指定Swagger API文档的访问路径
    path: /v3/api-docs
  group-configs:
    #配置了一个名为 default的组
    - group: 'default'
      paths-to-match: '/**'                   #指定了要包含在该组中的URL路径的通配符规则
      packages-to-scan: top.turingteam.budstudent.controller   #指定了要扫描的控制器所在的包
  default-flat-param-object: true             #默认情况下是否将嵌套的请求参数对象展平

## log4f config
logging:
  config: classpath:logback-spring.xml

## MyBatis-Plus config
mybatis-plus:
  global-config:
    db-config:
      table-prefix: tb_
      id-type: auto
    banner: false
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

## sa-token config
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: 259200
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  #从请求头获取token
  isReadHeader: true
  # jwt秘钥
  jwt-secret-key:
  #禁用cookie
  isReadCookie: false
  # 是否输出操作日志
  is-log: true
  #自动续签
  autoRenew: true

wx:
  appid:
  secret:
  grant_type: authorization_code
  template_id:
  page: index
  # developer 开发板, trial 体验版, formal 正式版
  miniprogram_state: formal
  lang: zh_CN

minio:
  endpoint:
  bucket: bud-student
  access_key:
  secret_key:

alipay:
  appId: 9021000135629565
  appPrivateKey:
  alipayPublicKey:
  # 调用支付宝支付接口后产生的回调，需要内网穿透
  notifyUrl:
  # 支付成功后的页面跳转，设置成你项目中的成功支付界面 （可不填）
  returnUrl:

tencent:
  secretId:
  secretKey:

cv:
  endpoint:
  object_api: /object
  face_api: /face